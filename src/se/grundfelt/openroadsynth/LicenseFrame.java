/* OpenRoadSynth - The free road noise synthisizer
 Copyright (C) 2016  Gustav Grundfelt

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>. */
package se.grundfelt.openroadsynth;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author gln
 */
public class LicenseFrame extends javax.swing.JFrame {

    /**
     * Creates new form SystemInfoFrame
     */
    LicenseFrame(String license) {
        initComponents();

        jTextAreaAwsomePeople.setLineWrap(true);
        jTextAreaAwsomePeople.setWrapStyleWord(true);

        //Get text from file
        if ("EULA".equals(license)) {
            loadEULA();
        }
        if ("TPL".equals(license)) {
            loadTPL();
        }

        //Set icon
        URL iconURL = getClass().getResource("icon_24x24.png");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());

        //CENTER THE JFRAME
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        //this.getContentPane().setBackground(new Color(190, 190, 215));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAwsomePeople = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButtonCopy = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        jTextAreaAwsomePeople.setEditable(false);
        jTextAreaAwsomePeople.setColumns(20);
        jTextAreaAwsomePeople.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextAreaAwsomePeople.setLineWrap(true);
        jTextAreaAwsomePeople.setRows(5);
        jScrollPane1.setViewportView(jTextAreaAwsomePeople);

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 0)));

        jButtonCopy.setIcon(new javax.swing.ImageIcon("C:\\prog\\roadsynth\\OpenRoadSynth\\src\\se\\grundfelt\\openroadsynth\\copy-26.png")); // NOI18N
        jButtonCopy.setToolTipText("Copies the text to the Clipboard");
        jButtonCopy.setBorder(null);
        jButtonCopy.setBorderPainted(false);
        jButtonCopy.setContentAreaFilled(false);
        jButtonCopy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });

        jButtonClose.setIcon(new javax.swing.ImageIcon("C:\\prog\\roadsynth\\OpenRoadSynth\\src\\se\\grundfelt\\openroadsynth\\exit-26.png")); // NOI18N
        jButtonClose.setToolTipText("Exits this window");
        jButtonClose.setBorder(null);
        jButtonClose.setBorderPainted(false);
        jButtonClose.setContentAreaFilled(false);
        jButtonClose.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        this.copyToClipboard();
    }//GEN-LAST:event_jButtonCopyActionPerformed
    /**
     * Copy SystemInfo to clipboard
     */

    /**
     * Read text file and load it onto the text area
     * http://stackoverflow.com/questions/6356086/how-to-read-text-file-in-jtextarea-in-java-swing
     */
    public void copyToClipboard() {
        StringSelection selection = new StringSelection(jTextAreaAwsomePeople.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaAwsomePeople;
    // End of variables declaration//GEN-END:variables

    private void loadEULA() {
        String Path = new File("").getAbsolutePath() + "\\RoadSynthEULA.txt";
        File file = new File(Path);
        FileReader reader;

        try {
            reader = new FileReader(file);
            jTextAreaAwsomePeople.read(reader, file);
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(LicenseFrame.class.getName()).log(Level.SEVERE, null, ex);
            jTextAreaAwsomePeople.setText("License file was not found in program folder");
        } catch (IOException ex) {
            //Logger.getLogger(LicenseFrame.class.getName()).log(Level.SEVERE, null, ex);
            jTextAreaAwsomePeople.setText("License file was not found in program folder");
        }
    }

    private void loadTPL() {
        String Path = new File("").getAbsolutePath() + "\\RoadSynthTPL.txt";
        File file = new File(Path);
        FileReader reader;

        try {
            reader = new FileReader(file);
            jTextAreaAwsomePeople.read(reader, file);
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(LicenseFrame.class.getName()).log(Level.SEVERE, null, ex);
            jTextAreaAwsomePeople.setText("License file was not found in program folder");
        } catch (IOException ex) {
            //Logger.getLogger(LicenseFrame.class.getName()).log(Level.SEVERE, null, ex);
            jTextAreaAwsomePeople.setText("License file was not found in program folder");
        }
    }
}
